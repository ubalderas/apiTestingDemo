/**
 * This file is a wrapper module for sending HTTP requests using the superagent node module.
 * Each method represents an HTTP verb, and accepts a test object as an input, which should contain the necessary 
 * properties to execute a request.
 */
"use strict";
let request = require('superagent');

let httpRequestUtilities = function(){};

/**
 * Sends a POST request and returns a response object
 * @param  {object} testObject - A Test Case object that contains a url, headers and payload
 * @return {object} The response object generated by superagent, where response.body contains a parsed object
 */
httpRequestUtilities.postRequest = function(testObject) {
    return new Promise( (resolve, reject) => {
        request
            .post(testObject.testURL)
            .set('Content-type', testObject.contentType)
            .send(testObject.payload)
            .end(function(error, response) {
                if (error) {
                    console.log('Error: Failed to test ' + testObject.testURL);
                    console.log(error.stack);
                    return reject(error);
                }
                return resolve(response);
            })
    })
};

/**
 * Sends a GET request and returns a response object
 * @param  {object} testObject - A Test Case object that contains a url, query parameters 
 * @return {object} The response object generated by superagent, where response.body contains a parsed object
 */
httpRequestUtilities.getRequest = function(testObject) {    
    
    if (testObject.queryString === undefined){
        testObject.queryString = "";
    }
    
    if (testObject.itemId === undefined){
        testObject.itemId = "";
    }
    
    if (testObject.itemId != "") {
        testObject.testURL = testObject.testURL + "/" + testObject.itemId;
    }
    
    return new Promise( (resolve, reject) => {
        request
            .get(testObject.testURL)
            .query(testObject.queryString)
            .end(function(error, response) {
                if (error) {
                    console.log('Error: Failed to test ' + testObject.testURL);
                    console.log(error.stack);
                    return reject(error);
                }

                return resolve(response);
            })
    })
};

module.exports = httpRequestUtilities;
